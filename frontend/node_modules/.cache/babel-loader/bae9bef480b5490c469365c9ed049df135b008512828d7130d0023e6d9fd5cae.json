{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yalla\\\\Desktop\\\\Nueve IT Solutions\\\\Employee Dashboard\\\\frontend\\\\src\\\\pages\\\\AddEmployee.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './AddEmployee.css';\n\n// const isValidEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n// const isValidPhone = (phone) => /^\\d{10}$/.test(phone);\n\n// const formatName = (rawName) => {\n//   return rawName.split(/[\\s.]+|(?<=\\.)\\s*/).filter(Boolean).map(part => {\n//       if (part.length === 1) return part.toUpperCase() + \".\";\n//       if (part.endsWith(\".\")) return part[0].toUpperCase() + \".\";\n//       return part[0].toUpperCase() + part.slice(1).toLowerCase();\n//     }).join(\" \");\n// };\n\n// function AddEmployee() {\n//   const [form, setForm] = useState({ name: '', email: '', position: '', salary: '', experience: '', phonenum: '' });\n//   const [image, setImage] = useState(null);\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n//   const [confirmReset, setConfirmReset] = useState(false);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//     setError('');\n//   };\n\n//   const handleFileChange = (e) => {\n//     setImage(e.target.files[0]);\n//   };\n\n//   const resetForm = () => {\n//     setForm({ name: '', email: '', position: '', salary: '', experience: '', phonenum: '' });\n//     setImage(null);\n//     setError('');\n//     setConfirmReset(false);\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const rawName = form.name;\n//     if(!/^[a-zA-Z\\s.]+$/.test(rawName)) {\n//       setError(\"Name should not contains digits or special characters\");\n//       return;\n//     }\n//     if(rawName.length > 100) {\n//       setError(\"Name should be at most 100 characters\");\n//       return;\n//     }\n//     if(!/^\\d+$/.test(form.phonenum)) {\n//       setError(\"Phone number should contain only digits\");\n//       return;\n//     }\n//     if(!isValidPhone(form.phonenum)) {\n//       setError(\"Phone number must be exactly 10 digits\");\n//       return;\n//     }\n//     if(!isValidEmail(form.email)) {\n//       setError(\"Invalid email format\");\n//       return;\n//     }\n\n//     const formattedName = formatName(rawName);\n\n//     const data = new FormData();\n//     Object.entries({ ...form, name: formattedName }).forEach(([key, value]) =>\n//       data.append(key, value)\n//     );\n//     if (image) data.append('image', image);\n\n//     try {\n//       const res = await fetch(`http://localhost:8000/employees`, {\n//         method: 'POST',\n//         body: data\n//       });\n//       if (res.status === 409) setError(\"Email already exists\");\n//       else navigate(\"/dashboard\");\n//     } catch (err) {\n//       setError(\"Something went wrong. Please try again\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <title>Add Employee</title>\n//       <div className=\"add-container\">\n//         <h2>Add Employee</h2>\n//         {error && <p className=\"error-message\">{error}</p>}\n//         <form onSubmit={handleSubmit}>\n//           <input name=\"name\" placeholder=\"Name\" value={form.name} onChange={handleChange} required /><br />\n//           <input name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required /><br />\n//           <input name=\"position\" placeholder=\"Position\" value={form.position} onChange={handleChange} required /><br />\n//           <input name=\"salary\" type=\"number\" placeholder=\"Salary\" value={form.salary} onChange={handleChange} required /><br />\n//           <input name=\"experience\" type=\"number\" placeholder=\"Experience\" value={form.experience} onChange={handleChange} required /><br />\n//           <input name=\"phonenum\" placeholder=\"Contact Number\" value={form.phonenum} onChange={handleChange} required /><br />\n//           <input type=\"file\" name=\"image\" accept=\"image/*\" onChange={handleFileChange} /><br />\n//           <div className=\"buttons\">\n//             <button className=\"reset-button\" type=\"button\" onClick={() => setConfirmReset(true)}>Reset</button>\n//             <button className=\"adding-button\" type=\"submit\" >Add</button>\n//           </div>\n//         </form>\n//         {confirmReset && (\n//           <div className=\"popup\">\n//             <p>Do you want to reset the above data?</p>\n//             <button className=\"popup-cancel\" onClick={() => setConfirmReset(false)}>Cancel</button>\n//             <button className=\"popup-reset\" onClick={resetForm}>Reset</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AddEmployee;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './AddEmployee.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isValidEmail = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\nconst isValidPhone = phone => /^\\d{10}$/.test(phone);\nconst formatName = rawName => {\n  return rawName.split(/[\\s.]+|(?<=\\.)\\s*/).filter(Boolean).map(part => {\n    if (part.length === 1) return part.toUpperCase() + \".\";\n    if (part.endsWith(\".\")) return part[0].toUpperCase() + \".\";\n    return part[0].toUpperCase() + part.slice(1).toLowerCase();\n  }).join(\" \");\n};\nfunction AddEmployee() {\n  _s();\n  var _location$state;\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    position: '',\n    salary: '',\n    experience: '',\n    phonenum: ''\n  });\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [confirmReset, setConfirmReset] = useState(false);\n  const location = useLocation();\n  const [alertMessage, setAlertMessage] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.successMessage) || \"\");\n  useEffect(() => {\n    if (alertMessage) {\n      const timer = setTimeout(() => {\n        setAlertMessage(\"\");\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [alertMessage]);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n    setError('');\n  };\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const resetForm = () => {\n    setForm({\n      name: '',\n      email: '',\n      position: '',\n      salary: '',\n      experience: '',\n      phonenum: ''\n    });\n    setImage(null);\n    setError('');\n    setConfirmReset(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const rawName = form.name;\n    if (!/^[a-zA-Z\\s.]+$/.test(rawName)) {\n      setError(\"Name should not contains digits or special characters\");\n      return;\n    }\n    if (rawName.length > 100) {\n      setError(\"Name should be at most 100 characters\");\n      return;\n    }\n    if (!/^\\d+$/.test(form.phonenum)) {\n      setError(\"Phone number should contain only digits\");\n      return;\n    }\n    if (!isValidPhone(form.phonenum)) {\n      setError(\"Phone number must be exactly 10 digits\");\n      return;\n    }\n    if (!isValidEmail(form.email)) {\n      setError(\"Invalid email format\");\n      return;\n    }\n    const formattedName = formatName(rawName);\n    const data = new FormData();\n    Object.entries({\n      ...form,\n      name: formattedName\n    }).forEach(([key, value]) => data.append(key, value));\n    if (image) data.append('image', image);\n    try {\n      const res = await fetch(`http://localhost:8000/employees`, {\n        method: 'POST',\n        body: data\n      });\n      if (res.status === 409) setError(\"Email already exists\");else navigate(\"/dashboard\");\n    } catch (err) {\n      setError(\"Something went wrong. Please try again\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), alertMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-group\",\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          placeholder: \"Name\",\n          value: form.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 102\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          placeholder: \"Email\",\n          value: form.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 105\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"position\",\n          placeholder: \"Position\",\n          value: form.position,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 114\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"salary\",\n          type: \"number\",\n          placeholder: \"Salary\",\n          value: form.salary,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 122\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"experience\",\n          type: \"number\",\n          placeholder: \"Experience\",\n          value: form.experience,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 134\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"phonenum\",\n          placeholder: \"Contact Number\",\n          value: form.phonenum,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 120\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          accept: \"image/*\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-button\",\n            type: \"button\",\n            onClick: () => setConfirmReset(true),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"adding-button\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), confirmReset && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Do you want to reset the above data?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-cancel\",\n          onClick: () => setConfirmReset(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup-reset\",\n          onClick: resetForm,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n_s(AddEmployee, \"t43VIS7yTd4uBw2JUgPbsqXQwx4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AddEmployee;\nexport default AddEmployee;\nvar _c;\n$RefreshReg$(_c, \"AddEmployee\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","isValidEmail","email","test","isValidPhone","phone","formatName","rawName","split","filter","Boolean","map","part","length","toUpperCase","endsWith","slice","toLowerCase","join","AddEmployee","_s","_location$state","form","setForm","name","position","salary","experience","phonenum","image","setImage","error","setError","navigate","confirmReset","setConfirmReset","location","alertMessage","setAlertMessage","state","successMessage","timer","setTimeout","clearTimeout","handleChange","e","target","value","handleFileChange","files","resetForm","handleSubmit","preventDefault","formattedName","data","FormData","Object","entries","forEach","key","append","res","fetch","method","body","status","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","placeholder","onChange","required","type","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yalla/Desktop/Nueve IT Solutions/Employee Dashboard/frontend/src/pages/AddEmployee.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './AddEmployee.css';\r\n\r\n// const isValidEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n// const isValidPhone = (phone) => /^\\d{10}$/.test(phone);\r\n\r\n// const formatName = (rawName) => {\r\n//   return rawName.split(/[\\s.]+|(?<=\\.)\\s*/).filter(Boolean).map(part => {\r\n//       if (part.length === 1) return part.toUpperCase() + \".\";\r\n//       if (part.endsWith(\".\")) return part[0].toUpperCase() + \".\";\r\n//       return part[0].toUpperCase() + part.slice(1).toLowerCase();\r\n//     }).join(\" \");\r\n// };\r\n\r\n// function AddEmployee() {\r\n//   const [form, setForm] = useState({ name: '', email: '', position: '', salary: '', experience: '', phonenum: '' });\r\n//   const [image, setImage] = useState(null);\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n//   const [confirmReset, setConfirmReset] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//     setError('');\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setImage(e.target.files[0]);\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setForm({ name: '', email: '', position: '', salary: '', experience: '', phonenum: '' });\r\n//     setImage(null);\r\n//     setError('');\r\n//     setConfirmReset(false);\r\n//   }\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const rawName = form.name;\r\n//     if(!/^[a-zA-Z\\s.]+$/.test(rawName)) {\r\n//       setError(\"Name should not contains digits or special characters\");\r\n//       return;\r\n//     }\r\n//     if(rawName.length > 100) {\r\n//       setError(\"Name should be at most 100 characters\");\r\n//       return;\r\n//     }\r\n//     if(!/^\\d+$/.test(form.phonenum)) {\r\n//       setError(\"Phone number should contain only digits\");\r\n//       return;\r\n//     }\r\n//     if(!isValidPhone(form.phonenum)) {\r\n//       setError(\"Phone number must be exactly 10 digits\");\r\n//       return;\r\n//     }\r\n//     if(!isValidEmail(form.email)) {\r\n//       setError(\"Invalid email format\");\r\n//       return;\r\n//     }\r\n\r\n//     const formattedName = formatName(rawName);\r\n\r\n//     const data = new FormData();\r\n//     Object.entries({ ...form, name: formattedName }).forEach(([key, value]) =>\r\n//       data.append(key, value)\r\n//     );\r\n//     if (image) data.append('image', image);\r\n\r\n//     try {\r\n//       const res = await fetch(`http://localhost:8000/employees`, {\r\n//         method: 'POST',\r\n//         body: data\r\n//       });\r\n//       if (res.status === 409) setError(\"Email already exists\");\r\n//       else navigate(\"/dashboard\");\r\n//     } catch (err) {\r\n//       setError(\"Something went wrong. Please try again\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <title>Add Employee</title>\r\n//       <div className=\"add-container\">\r\n//         <h2>Add Employee</h2>\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input name=\"name\" placeholder=\"Name\" value={form.name} onChange={handleChange} required /><br />\r\n//           <input name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required /><br />\r\n//           <input name=\"position\" placeholder=\"Position\" value={form.position} onChange={handleChange} required /><br />\r\n//           <input name=\"salary\" type=\"number\" placeholder=\"Salary\" value={form.salary} onChange={handleChange} required /><br />\r\n//           <input name=\"experience\" type=\"number\" placeholder=\"Experience\" value={form.experience} onChange={handleChange} required /><br />\r\n//           <input name=\"phonenum\" placeholder=\"Contact Number\" value={form.phonenum} onChange={handleChange} required /><br />\r\n//           <input type=\"file\" name=\"image\" accept=\"image/*\" onChange={handleFileChange} /><br />\r\n//           <div className=\"buttons\">\r\n//             <button className=\"reset-button\" type=\"button\" onClick={() => setConfirmReset(true)}>Reset</button>\r\n//             <button className=\"adding-button\" type=\"submit\" >Add</button>\r\n//           </div>\r\n//         </form>\r\n//         {confirmReset && (\r\n//           <div className=\"popup\">\r\n//             <p>Do you want to reset the above data?</p>\r\n//             <button className=\"popup-cancel\" onClick={() => setConfirmReset(false)}>Cancel</button>\r\n//             <button className=\"popup-reset\" onClick={resetForm}>Reset</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AddEmployee;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './AddEmployee.css';\r\n\r\nconst isValidEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\nconst isValidPhone = (phone) => /^\\d{10}$/.test(phone);\r\n\r\nconst formatName = (rawName) => {\r\n  return rawName.split(/[\\s.]+|(?<=\\.)\\s*/).filter(Boolean).map(part => {\r\n      if (part.length === 1) return part.toUpperCase() + \".\";\r\n      if (part.endsWith(\".\")) return part[0].toUpperCase() + \".\";\r\n      return part[0].toUpperCase() + part.slice(1).toLowerCase();\r\n    }).join(\" \");\r\n};\r\n\r\nfunction AddEmployee() {\r\n  const [form, setForm] = useState({ name: '', email: '', position: '', salary: '', experience: '', phonenum: '' });\r\n  const [image, setImage] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const [confirmReset, setConfirmReset] = useState(false);\r\n  const location = useLocation();\r\n  const [alertMessage, setAlertMessage] = useState(location.state?.successMessage || \"\");\r\n\r\n  useEffect(() =>{\r\n    if(alertMessage) {\r\n      const timer = setTimeout(() => {\r\n        setAlertMessage(\"\");\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [alertMessage]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    setError('');\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setForm({ name: '', email: '', position: '', salary: '', experience: '', phonenum: '' });\r\n    setImage(null);\r\n    setError('');\r\n    setConfirmReset(false);\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const rawName = form.name;\r\n    if(!/^[a-zA-Z\\s.]+$/.test(rawName)) {\r\n      setError(\"Name should not contains digits or special characters\");\r\n      return;\r\n    }\r\n    if(rawName.length > 100) {\r\n      setError(\"Name should be at most 100 characters\");\r\n      return;\r\n    }\r\n    if(!/^\\d+$/.test(form.phonenum)) {\r\n      setError(\"Phone number should contain only digits\");\r\n      return;\r\n    }\r\n    if(!isValidPhone(form.phonenum)) {\r\n      setError(\"Phone number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n    if(!isValidEmail(form.email)) {\r\n      setError(\"Invalid email format\");\r\n      return;\r\n    }\r\n\r\n    const formattedName = formatName(rawName);\r\n\r\n    const data = new FormData();\r\n    Object.entries({ ...form, name: formattedName }).forEach(([key, value]) =>\r\n      data.append(key, value)\r\n    );\r\n    if (image) data.append('image', image);\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/employees`, {\r\n        method: 'POST',\r\n        body: data\r\n      });\r\n      if (res.status === 409) setError(\"Email already exists\");\r\n      else navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      setError(\"Something went wrong. Please try again\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <title>Add Employee</title>\r\n      {alertMessage && (\r\n        <div className=\"alert-group\">{alertMessage}</div>\r\n      )}\r\n      <div className=\"add-container\">\r\n        <h2>Add Employee</h2>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <form onSubmit={handleSubmit}>\r\n          <input name=\"name\" placeholder=\"Name\" value={form.name} onChange={handleChange} required /><br />\r\n          <input name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required /><br />\r\n          <input name=\"position\" placeholder=\"Position\" value={form.position} onChange={handleChange} required /><br />\r\n          <input name=\"salary\" type=\"number\" placeholder=\"Salary\" value={form.salary} onChange={handleChange} required /><br />\r\n          <input name=\"experience\" type=\"number\" placeholder=\"Experience\" value={form.experience} onChange={handleChange} required /><br />\r\n          <input name=\"phonenum\" placeholder=\"Contact Number\" value={form.phonenum} onChange={handleChange} required /><br />\r\n          <input type=\"file\" name=\"image\" accept=\"image/*\" onChange={handleFileChange} /><br />\r\n          <div className=\"buttons\">\r\n            <button className=\"reset-button\" type=\"button\" onClick={() => setConfirmReset(true)}>Reset</button>\r\n            <button className=\"adding-button\" type=\"submit\" >Add</button>\r\n          </div>\r\n        </form>\r\n        {confirmReset && (\r\n          <div className=\"popup\">\r\n            <p>Do you want to reset the above data?</p>\r\n            <button className=\"popup-cancel\" onClick={() => setConfirmReset(false)}>Cancel</button>\r\n            <button className=\"popup-reset\" onClick={resetForm}>Reset</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEmployee;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AA2BA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,YAAY,GAAIC,KAAK,IAAK,4BAA4B,CAACC,IAAI,CAACD,KAAK,CAAC;AACxE,MAAME,YAAY,GAAIC,KAAK,IAAK,UAAU,CAACF,IAAI,CAACE,KAAK,CAAC;AAEtD,MAAMC,UAAU,GAAIC,OAAO,IAAK;EAC9B,OAAOA,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,GAAG,CAACC,IAAI,IAAI;IAClE,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAOD,IAAI,CAACE,WAAW,CAAC,CAAC,GAAG,GAAG;IACtD,IAAIF,IAAI,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAOH,IAAI,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,GAAG,GAAG;IAC1D,OAAOF,IAAI,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC5D,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAChB,CAAC;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC;IAAE4B,IAAI,EAAE,EAAE;IAAEtB,KAAK,EAAE,EAAE;IAAEuB,QAAQ,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,UAAU,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACjH,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMqC,QAAQ,GAAGpC,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMwC,QAAQ,GAAGtC,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,EAAAyB,eAAA,GAAAe,QAAQ,CAACG,KAAK,cAAAlB,eAAA,uBAAdA,eAAA,CAAgBmB,cAAc,KAAI,EAAE,CAAC;EAEtF7C,SAAS,CAAC,MAAK;IACb,IAAG0C,YAAY,EAAE;MACf,MAAMI,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BJ,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMK,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1BtB,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACuB,CAAC,CAACC,MAAM,CAACtB,IAAI,GAAGqB,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;IACrDf,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMgB,gBAAgB,GAAIH,CAAC,IAAK;IAC9Bf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB3B,OAAO,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEtB,KAAK,EAAE,EAAE;MAAEuB,QAAQ,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,UAAU,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;IACxFE,QAAQ,CAAC,IAAI,CAAC;IACdE,QAAQ,CAAC,EAAE,CAAC;IACZG,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAON,CAAC,IAAK;IAChCA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,MAAM7C,OAAO,GAAGe,IAAI,CAACE,IAAI;IACzB,IAAG,CAAC,gBAAgB,CAACrB,IAAI,CAACI,OAAO,CAAC,EAAE;MAClCyB,QAAQ,CAAC,uDAAuD,CAAC;MACjE;IACF;IACA,IAAGzB,OAAO,CAACM,MAAM,GAAG,GAAG,EAAE;MACvBmB,QAAQ,CAAC,uCAAuC,CAAC;MACjD;IACF;IACA,IAAG,CAAC,OAAO,CAAC7B,IAAI,CAACmB,IAAI,CAACM,QAAQ,CAAC,EAAE;MAC/BI,QAAQ,CAAC,yCAAyC,CAAC;MACnD;IACF;IACA,IAAG,CAAC5B,YAAY,CAACkB,IAAI,CAACM,QAAQ,CAAC,EAAE;MAC/BI,QAAQ,CAAC,wCAAwC,CAAC;MAClD;IACF;IACA,IAAG,CAAC/B,YAAY,CAACqB,IAAI,CAACpB,KAAK,CAAC,EAAE;MAC5B8B,QAAQ,CAAC,sBAAsB,CAAC;MAChC;IACF;IAEA,MAAMqB,aAAa,GAAG/C,UAAU,CAACC,OAAO,CAAC;IAEzC,MAAM+C,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BC,MAAM,CAACC,OAAO,CAAC;MAAE,GAAGnC,IAAI;MAAEE,IAAI,EAAE6B;IAAc,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEZ,KAAK,CAAC,KACpEO,IAAI,CAACM,MAAM,CAACD,GAAG,EAAEZ,KAAK,CACxB,CAAC;IACD,IAAIlB,KAAK,EAAEyB,IAAI,CAACM,MAAM,CAAC,OAAO,EAAE/B,KAAK,CAAC;IAEtC,IAAI;MACF,MAAMgC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEV;MACR,CAAC,CAAC;MACF,IAAIO,GAAG,CAACI,MAAM,KAAK,GAAG,EAAEjC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,KACpDC,QAAQ,CAAC,YAAY,CAAC;IAC7B,CAAC,CAAC,OAAOiC,GAAG,EAAE;MACZlC,QAAQ,CAAC,wCAAwC,CAAC;IACpD;EACF,CAAC;EAED,oBACEhC,OAAA;IAAAmE,QAAA,gBACEnE,OAAA;MAAAmE,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC1BlC,YAAY,iBACXrC,OAAA;MAAKwE,SAAS,EAAC,aAAa;MAAAL,QAAA,EAAE9B;IAAY;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACjD,eACDvE,OAAA;MAAKwE,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAC5BnE,OAAA;QAAAmE,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBxC,KAAK,iBAAI/B,OAAA;QAAGwE,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAEpC;MAAK;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDvE,OAAA;QAAMyE,QAAQ,EAAEtB,YAAa;QAAAgB,QAAA,gBAC3BnE,OAAA;UAAOwB,IAAI,EAAC,MAAM;UAACkD,WAAW,EAAC,MAAM;UAAC3B,KAAK,EAAEzB,IAAI,CAACE,IAAK;UAACmD,QAAQ,EAAE/B,YAAa;UAACgC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAAvE,OAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjGvE,OAAA;UAAOwB,IAAI,EAAC,OAAO;UAACkD,WAAW,EAAC,OAAO;UAAC3B,KAAK,EAAEzB,IAAI,CAACpB,KAAM;UAACyE,QAAQ,EAAE/B,YAAa;UAACgC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAAvE,OAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpGvE,OAAA;UAAOwB,IAAI,EAAC,UAAU;UAACkD,WAAW,EAAC,UAAU;UAAC3B,KAAK,EAAEzB,IAAI,CAACG,QAAS;UAACkD,QAAQ,EAAE/B,YAAa;UAACgC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAAvE,OAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7GvE,OAAA;UAAOwB,IAAI,EAAC,QAAQ;UAACqD,IAAI,EAAC,QAAQ;UAACH,WAAW,EAAC,QAAQ;UAAC3B,KAAK,EAAEzB,IAAI,CAACI,MAAO;UAACiD,QAAQ,EAAE/B,YAAa;UAACgC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAAvE,OAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrHvE,OAAA;UAAOwB,IAAI,EAAC,YAAY;UAACqD,IAAI,EAAC,QAAQ;UAACH,WAAW,EAAC,YAAY;UAAC3B,KAAK,EAAEzB,IAAI,CAACK,UAAW;UAACgD,QAAQ,EAAE/B,YAAa;UAACgC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAAvE,OAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjIvE,OAAA;UAAOwB,IAAI,EAAC,UAAU;UAACkD,WAAW,EAAC,gBAAgB;UAAC3B,KAAK,EAAEzB,IAAI,CAACM,QAAS;UAAC+C,QAAQ,EAAE/B,YAAa;UAACgC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAAvE,OAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnHvE,OAAA;UAAO6E,IAAI,EAAC,MAAM;UAACrD,IAAI,EAAC,OAAO;UAACsD,MAAM,EAAC,SAAS;UAACH,QAAQ,EAAE3B;QAAiB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAAAvE,OAAA;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrFvE,OAAA;UAAKwE,SAAS,EAAC,SAAS;UAAAL,QAAA,gBACtBnE,OAAA;YAAQwE,SAAS,EAAC,cAAc;YAACK,IAAI,EAAC,QAAQ;YAACE,OAAO,EAAEA,CAAA,KAAM5C,eAAe,CAAC,IAAI,CAAE;YAAAgC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnGvE,OAAA;YAAQwE,SAAS,EAAC,eAAe;YAACK,IAAI,EAAC,QAAQ;YAAAV,QAAA,EAAE;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EACNrC,YAAY,iBACXlC,OAAA;QAAKwE,SAAS,EAAC,OAAO;QAAAL,QAAA,gBACpBnE,OAAA;UAAAmE,QAAA,EAAG;QAAoC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3CvE,OAAA;UAAQwE,SAAS,EAAC,cAAc;UAACO,OAAO,EAAEA,CAAA,KAAM5C,eAAe,CAAC,KAAK,CAAE;UAAAgC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvFvE,OAAA;UAAQwE,SAAS,EAAC,aAAa;UAACO,OAAO,EAAE7B,SAAU;UAAAiB,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnD,EAAA,CA9GQD,WAAW;EAAA,QAIDtB,WAAW,EAEXC,WAAW;AAAA;AAAAkF,EAAA,GANrB7D,WAAW;AAgHpB,eAAeA,WAAW;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}